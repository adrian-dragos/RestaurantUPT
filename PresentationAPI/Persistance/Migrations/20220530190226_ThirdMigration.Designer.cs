// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistance;

#nullable disable

namespace Persistance.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220530190226_ThirdMigration")]
    partial class ThirdMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.Meal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ImageData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("Meals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ImageData = "https://www.thespruceeats.com/thmb/tXRCQhaBACOilf8tnzLhaW0uzbE=/3485x1960/smart/filters:no_upscale()/how-to-make-homemade-french-fries-2215971-hero-01-02f62a016f3e4aa4b41d0c27539885c3.jpg",
                            Name = "Cartofi Prajiti",
                            Price = 4.0
                        },
                        new
                        {
                            Id = 2,
                            ImageData = "https://thumbs.dreamstime.com/z/gohan-traditional-japanese-food-clear-rise-91343074.jpg",
                            Name = "Orez",
                            Price = 4.25
                        },
                        new
                        {
                            Id = 3,
                            ImageData = "https://www.wholesomeyum.com/wp-content/uploads/2022/01/wholesomeyum-Baked-Chicken-Leg-Quarters-Recipe-9.jpg",
                            Name = "Piept de pui",
                            Price = 4.0
                        },
                        new
                        {
                            Id = 4,
                            ImageData = "https://www.e-retete.ro/files/recipes/cotlete-de-porc-la-tava.jpg",
                            Name = "Cotlet de porc",
                            Price = 4.0
                        },
                        new
                        {
                            Id = 5,
                            ImageData = "https://www.saltandlavender.com/wp-content/uploads/2018/12/creamy-garlic-chicken-recipe-1.jpg",
                            Name = "Pulpa de pui dezosata",
                            Price = 4.25
                        },
                        new
                        {
                            Id = 6,
                            ImageData = "https://3w12zw31w2dc3apx892l1b3a-wpengine.netdna-ssl.com/wp-content/uploads/2015/02/chicken-soup-one-dish-kitchen-square-1200.jpg",
                            Name = "Supa de pui",
                            Price = 3.25
                        },
                        new
                        {
                            Id = 7,
                            ImageData = "https://www.cookingclassy.com/wp-content/uploads/2014/10/vegetable-soup-7.jpg",
                            Name = "Supa de legume",
                            Price = 3.25
                        });
                });

            modelBuilder.Entity("Domain.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Day")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("MealId1")
                        .HasColumnType("bit");

                    b.Property<bool?>("MealId10")
                        .HasColumnType("bit");

                    b.Property<bool?>("MealId2")
                        .HasColumnType("bit");

                    b.Property<bool?>("MealId3")
                        .HasColumnType("bit");

                    b.Property<bool?>("MealId4")
                        .HasColumnType("bit");

                    b.Property<bool?>("MealId5")
                        .HasColumnType("bit");

                    b.Property<bool?>("MealId6")
                        .HasColumnType("bit");

                    b.Property<bool?>("MealId7")
                        .HasColumnType("bit");

                    b.Property<bool?>("MealId8")
                        .HasColumnType("bit");

                    b.Property<bool?>("MealId9")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Menus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Day = new DateTime(2022, 5, 29, 22, 2, 25, 878, DateTimeKind.Local).AddTicks(1565),
                            MealId1 = true,
                            MealId10 = false,
                            MealId2 = false,
                            MealId3 = true,
                            MealId4 = true,
                            MealId5 = false,
                            MealId6 = false,
                            MealId7 = false,
                            MealId8 = false,
                            MealId9 = false
                        },
                        new
                        {
                            Id = 2,
                            Day = new DateTime(2022, 5, 30, 22, 2, 25, 878, DateTimeKind.Local).AddTicks(1628),
                            MealId1 = false,
                            MealId10 = false,
                            MealId2 = true,
                            MealId3 = false,
                            MealId4 = false,
                            MealId5 = true,
                            MealId6 = false,
                            MealId7 = true,
                            MealId8 = false,
                            MealId9 = false
                        });
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("DateOfDelivery")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MealId")
                        .HasColumnType("int");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<double?>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfDelivery = new DateTime(2022, 5, 29, 22, 2, 25, 878, DateTimeKind.Local).AddTicks(1855),
                            MealId = 2,
                            Quantity = 1,
                            Status = 2,
                            StudentId = 1,
                            TotalPrice = 4.25
                        },
                        new
                        {
                            Id = 2,
                            DateOfDelivery = new DateTime(2022, 5, 30, 22, 2, 25, 878, DateTimeKind.Local).AddTicks(1865),
                            MealId = 1,
                            Quantity = 2,
                            Status = 0,
                            StudentId = 1,
                            TotalPrice = 8.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdNumber")
                        .IsUnique()
                        .HasFilter("[IdNumber] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "olga.culeac@student.upt.ro",
                            IdNumber = "lm-12314",
                            Name = "Olga Culeac"
                        },
                        new
                        {
                            Id = 2,
                            Email = "banana.banan@student.upt.ro",
                            IdNumber = "lm-12312S",
                            Name = "Banana banana"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Meal", b =>
                {
                    b.HasOne("Domain.Entities.Order", null)
                        .WithMany("Meals")
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("Domain.Entities.Order", b =>
                {
                    b.Navigation("Meals");
                });
#pragma warning restore 612, 618
        }
    }
}
